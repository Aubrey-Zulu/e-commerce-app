{"ast":null,"code":"import _objectSpread from \"/home/aubrey/e-commerce-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCoSR8x2seuP5EEuUhqAZTflgpcpBiFUvo\",\n  authDomain: \"e-commerce-app-98303.firebaseapp.com\",\n  databaseURL: \"https://e-commerce-app-98303.firebaseio.com\",\n  projectId: \"e-commerce-app-98303\",\n  storageBucket: \"e-commerce-app-98303.appspot.com\",\n  messagingSenderId: \"344187104744\",\n  appId: \"1:344187104744:web:2502cd3e9b8976b0c3485d\",\n  measurementId: \"G-WD2HQK136N\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const convertCollectionsToMap = collections => {\n  const transformedCollections = collections.docs.map(docSnapShot => {\n    const _docSnapShot$data = docSnapShot.data(),\n          title = _docSnapShot$data.title,\n          items = _docSnapShot$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: docSnapShot.id,\n      title,\n      items\n    };\n  });\n  return transformedCollections.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const addCollectionsAndDocuments = async (collectionKey, collectionObject) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  collectionObject.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/home/aubrey/e-commerce-app/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","convertCollectionsToMap","collections","transformedCollections","docs","map","docSnapShot","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","collection","addCollectionsAndDocuments","collectionKey","collectionObject","collectionRef","batch","forEach","obj","newDocRef","commit","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: \"AIzaSyCoSR8x2seuP5EEuUhqAZTflgpcpBiFUvo\",\n  authDomain: \"e-commerce-app-98303.firebaseapp.com\",\n  databaseURL: \"https://e-commerce-app-98303.firebaseio.com\",\n  projectId: \"e-commerce-app-98303\",\n  storageBucket: \"e-commerce-app-98303.appspot.com\",\n  messagingSenderId: \"344187104744\",\n  appId: \"1:344187104744:web:2502cd3e9b8976b0c3485d\",\n  measurementId: \"G-WD2HQK136N\"\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe()\n      resolve(userAuth)\n    }, reject)\n  })\n}\n\n\nexport const convertCollectionsToMap = (collections) => {\n  const transformedCollections = collections.docs.map(docSnapShot => {\n    const { title, items } = docSnapShot.data()\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: docSnapShot.id,\n      title,\n      items\n    }\n  })\n  return transformedCollections.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {})\n\n}\n\nexport const addCollectionsAndDocuments = async (collectionKey, collectionObject) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch()\n  collectionObject.forEach(obj => {\n    const newDocRef = collectionRef.doc()\n    batch.set(newDocRef, obj)\n  })\n  return await batch.commit()\n}\n\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}