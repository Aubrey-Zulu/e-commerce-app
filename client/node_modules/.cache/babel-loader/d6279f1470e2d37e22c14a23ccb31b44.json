{"ast":null,"code":"import _objectSpread from \"/home/aubrey/e-commerce-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { UserActionTypes } from './user.types';\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from './user.actions';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\n\nfunction* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapShotFromUserAuth(user, additionalData);\n}\n\nfunction* getSnapShotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapShot = yield userRef.get();\n    yield put(SignInSuccess(_objectSpread({\n      id: userSnapShot.id\n    }, userSnapShot.data())));\n  } catch (error) {\n    yield put(SignInFailure(error.message));\n  }\n}\n\nfunction* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nfunction* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _yield$auth$createUse = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _yield$auth$createUse.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signInWithGoogle() {\n  try {\n    const _yield$auth$signInWit = yield auth.signInWithPopup(googleProvider),\n          user = _yield$auth$signInWit.user;\n\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _yield$auth$signInWit2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _yield$auth$signInWit2.user;\n\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nfunction* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nfunction* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport default function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/home/aubrey/e-commerce-app/client/src/redux/user/user.sagas.js"],"names":["takeLatest","call","put","all","UserActionTypes","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","signUpFailure","signUpSuccess","googleProvider","auth","createUserProfileDocument","getCurrentUser","signInAfterSignUp","payload","user","additionalData","getSnapShotFromUserAuth","userAuth","userRef","userSnapShot","get","id","data","error","message","signOut","signUp","email","password","displayName","createUserWithEmailAndPassword","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signInWithGoogle","signInWithPopup","signInWithEmail","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { UserActionTypes } from './user.types'\nimport {\n  SignInSuccess,\n  SignInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpFailure,\n  signUpSuccess\n} from './user.actions'\nimport {\n  googleProvider,\n  auth,\n  createUserProfileDocument,\n  getCurrentUser\n} from '../../firebase/firebase.utils'\n\nfunction* signInAfterSignUp({ payload: { user, additionalData } }) {\n  yield getSnapShotFromUserAuth(user, additionalData)\n}\n\nfunction* getSnapShotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapShot = yield userRef.get()\n    yield put(SignInSuccess({ id: userSnapShot.id, ...userSnapShot.data() }))\n  } catch (error) {\n    yield put(SignInFailure(error.message))\n  }\n}\n\nfunction* signOut() {\n  try {\n    yield auth.signOut()\n    yield put(signOutSuccess())\n  } catch (error) {\n    yield put(signOutFailure(error))\n  }\n}\n\nfunction* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password)\n    yield put(signUpSuccess({ user, additionalData: { displayName } }))\n  } catch (error) {\n    yield put(signUpFailure(error))\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser()\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth)\n  } catch (error) {\n    yield put(SignInFailure(error))\n\n  }\n\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user)\n  } catch (error) {\n    yield put(SignInFailure(error.message))\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n    yield getSnapShotFromUserAuth(user)\n  } catch (error) {\n    yield put(SignInFailure(error))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n};\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nfunction* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nfunction* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\nexport default function* userSaga() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess)\n  ])\n}"]},"metadata":{},"sourceType":"module"}